{"version":3,"sources":["Components/Locations.js","Components/Server.js","Components/Search.js","Components/Home.js","Components/Login.js","Components/Results.js","Components/Update.js","Components/AddReview.js","Components/AddBusiness.js","Components/Delete.js","App.js","reportWebVitals.js","index.js"],"names":["locations","id","name","visible","address","type","city","state","keywords","reviews","rating","open","close","server","fetchRestaurant","result","filter","biz","length","getEntries","fetchAll","getResults","keyword","x","toUpperCase","includes","toLowerCase","getAllSearchResults","getCitySearchResults","getTypeSearchResults","getKeywordSearchResults","updateBusiness","changedBiz","addAReview","review","push","addBusiness","business","newID","console","log","deleteBusiness","Search","props","onSubmit","e","setState","searched","preventDefault","setType","val","target","value","searchType","setCity","searchCity","setKeyword","searchKeyword","goBack","this","filtered","onClick","map","entry","class","to","pathname","onChange","disabled","selected","hidden","placeholder","React","Component","Home","event","submitted","searchByCity","query","queryCity","searchByState","queryState","searchByKeyword","queryKeyword","loggedIn","user","location","className","Login","login","showLoginForm","username","trim","signedIn","handleChangeName","handleChangePassword","password","from","Results","getByKeyword","retSet","getAllNoLocation","body","results","i","keys","split","getAll","entries","Update","updated","updateBiz","newName","setNewName","AddReview","newReview","setNewReview","newreview","businessObj","newAddress","newType","newCity","newState","newKeywords","newOpen","newClose","setNewEntry","deleteThis","setDeleteThis","App","basename","process","Public_URL","exact","path","render","AddBusiness","Delete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2dad5e3.chunk.js","sourcesContent":["let locations = [\n    {\n        id: 0,\n        name: \"Target\",\n        visible: true,\n        address: \"4040 N Oracle\",\n        type: 'Retail',\n        city: \"Tucson\",\n        state: \"AZ\",\n        keywords: \"retail,clothing,grocery\",\n        reviews: [\"here is a review for target\", \"here is another for target\"],\n        rating: 5,\n        open: 900,\n        close: 2200\n    },\n    {\n        id: 1,\n        visible: true,\n        name: \"TJ Maxx\",\n        address: \"6230 N Oracle Rd\",\n        type: 'Retail',\n        city: \"Tucson\",\n        state: \"AZ\",\n        keywords: \"clothing,retial,mens,womens,children,test\",\n        reviews: [\"here is a review for TJ Maxx\", \"here is another for TJ Maxx\"],\n        rating: 5,\n        open: 800,\n        close: 2000,\n    },\n    {\n        id: 2,\n        visible: true,\n        name: \"Nico's Taco Shop\",\n        address: \"2965 N Campbell Ave\",\n        type: \"Restaurant\",\n        city: \"Tucson\",\n        state: \"AZ\",\n        keywords: \"food,restaurant,mexican,burrito,test\",\n        reviews: [\"here is a review for Nicos\", \"here is another for Nicos\"],\n        rating: 5,\n        open: 2400,\n        close: 2400\n\n    },\n    {\n        id: 3,\n        visible: true,\n        name: \"Green Things\",\n        address: \"3384 E River Rd\",\n        type: 'Retail',\n        city: \"Tucson\",\n        state: \"AZ\",\n        keywords: \"garden,plants,nursery,pots\",\n        reviews: [\"here is a review for Green Things\", \"here is another for Green Things\"],\n        rating: 5,\n        open: 900,\n        close: 1700\n\n    },\n    {\n        id: 4,\n        visible: true,\n        name: \"Plumb Happy Plumbing\",\n        address: \"123 Happy Lane\",\n        type: 'Services',\n        city: \"Tucson\",\n        state: \"AZ\",\n        keywords: \"plumbing,pottery,test\",\n        reviews: [\"here is a review for PHP\", \"here is another for PHP\"],\n        rating: 5,\n        open: 900,\n        close: 1700\n\n    }\n\n]\n\nexport default locations;","import locations from \"./Locations\";\nimport Search from \"./Search\";\n\n\nlet getEntries = function(type){\n    let result = locations.filter(biz => biz.type === type);\n    if (result.length > 0){\n        return result.locations;\n    }else{\n        return [];\n    }\n}\n\nlet getAllSearchResults = function(type,city,keyword){\n    let businesses = locations.filter(x => x.type.toUpperCase() === type.toUpperCase()\n        && x.city.toUpperCase() === city.toUpperCase()\n        && x.keywords.includes(keyword.toLowerCase())\n        && x.visible === true)\n    if (businesses){\n        return businesses;\n    }else{\n        return [];\n    }\n}\nlet getCitySearchResults = function(city){\n    let businesses = locations.filter(x => x.city.toUpperCase() === city.toUpperCase()\n        && x.visible === true)\n    if (businesses){\n        return businesses;\n    }else{\n        return [];\n    }\n}\n\nlet getTypeSearchResults = function(type){\n    let businesses = locations.filter(x => x.type.toUpperCase() === type.toUpperCase()\n        && x.visible === true)\n    if (businesses){\n        return businesses;\n    }else{\n        return [];\n    }\n}\n\nlet getKeywordSearchResults = function(keyword){\n    let businesses = locations.filter(x => x.keywords.includes(keyword.toLowerCase())\n        && x.visible === true)\n    if (businesses){\n        return businesses;\n    }else{\n        return [];\n    }\n}\nlet server = {\n    fetchRestaurant : () => {\n        return getEntries('Restaurant');\n    },\n    fetchAll : () => {\n        return locations;\n    },\n    getResults : (type,city,keyword) => {\n        if (type.length > 0 && city.length > 0 && keyword.length > 0){\n            return getAllSearchResults(type,city,keyword);\n        }\n        else if (type.length <= 0 && city.length > 0 && keyword.length <= 0){\n            return getCitySearchResults(city);\n        }\n        else if (type.length > 0 && city.length <= 0 && keyword.length <= 0){\n            return getTypeSearchResults(type);\n        }\n        else if (type.length <= 0 && city.length <= 0 && keyword.length > 0){\n            return getKeywordSearchResults(keyword);\n        }else{\n            return [];\n        }\n    },\n    updateBusiness:(changedBiz) => {\n        locations[changedBiz.id] = changedBiz;\n    },\n    addAReview:(id,review) => {\n        locations[id].reviews.push(review);\n    },\n    addBusiness: (business) => {\n        const newID = locations.length;\n        business.reviews = [];\n        business.rating = 0;\n        business.id = newID;\n        locations.push(business);\n        console.log(locations);\n    },\n    deleteBusiness: (id) => {\n        locations[id].visible = false;\n        console.log(locations);\n    }\n\n}\nexport default server;","import React from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Link,\n    Redirect\n  } from \"react-router-dom\";\n  import server from \"./Server\";\n  import locations from \"./Locations\";\n\n  class Search extends React.Component{\n      constructor(props){\n          super(props)\n          this.state = {\n              searchType: \"\",\n              searchCity: \"\",\n              searchKeyword: \"\",\n              searched: false\n          }\n      }\n      onSubmit = (e) => {\n          this.setState({searched: true})\n          e.preventDefault();\n      }\n\n      setType = (e) => {\n          let val = e.target.value;\n          this.setState({searchType: val});\n      }\n\n      setCity = (e) => {\n          let val = e.target.value;\n          this.setState({searchCity: val});\n      }\n\n      setKeyword = (e) => {\n          let val = e.target.value;\n          this.setState({searchKeyword: val});\n      }\n\n      goBack = (e) => {\n          this.setState({searched: false})\n      }\n\n      render(){\n          if (this.state.searched){\n              console.log(locations)\n              const filtered = server.getResults(this.state.searchType,\n                this.state.searchCity,\n                this.state.searchKeyword);\n              if (filtered.length > 0){  \n              return (\n                <div>\n                <div>Your Search found <b>{filtered.length}</b> Result(s):</div>\n                <div><button onClick = {this.goBack}>Edit Search</button></div>\n                {filtered.map((entry) =>\n                (<div class=\"displaySearch\">\n                <b>{entry.name}</b><br/>\n                {entry.city}, {entry.state}: {entry.address}<br/>\n                Rating: {entry.rating}<br/>\n                Reviews: {entry.reviews.map((review) =>\n                (<li key={entry.reviews}>{review}</li>))}\n                Opens: {entry.open}<br/>\n                Close: {entry.close}<br/>\n                <Link \n                to={{\n                    pathname: '/update',\n                    state: {id: entry.id}\n                    }}>Update</Link><br/>\n                <Link \n                to={{\n                    pathname: '/addreview',\n                    state: {id: entry.id}\n                }}>Add A Review</Link><hr/>\n                </div>))}\n                </div>\n            );\n              }else{\n                  return(\n                      <div>\n                    <div><button onClick = {this.goBack}>Edit Search</button></div>\n                      <h1>No results</h1>\n                      </div>\n                  );\n              }\n          }else{\n          return(\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <select id = \"dropdown\" name=\"type\" value={this.state.searchType} onChange = {this.setType}>\n                        <option value = '' disabled selected hidden>Choose a Type</option>\n                        <option value = \"Restaurant\">Restaurant</option>\n                        <option value = \"Retail\">Retail</option>\n                        <option value = \"Services\">Services</option>\n                    </select><br/>\n                    <input type=\"text\" \n                            value = {this.state.searchCity}\n                            placeholder=\"Search City\"\n                            onChange={this.setCity}></input><br/>\n                    <input type=\"text\"\n                            value = {this.state.searchKeyword}\n                            placeholder = \"Search by Keyword\"\n                            onChange = {this.setKeyword}></input><br/>\n                    <button type = \"submit\">Search</button>\n                </form>\n\n            </div>\n          );\n          }\n      }\n  }\n  export default Search;","import React from 'react';\nimport {\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport locations from \"./Locations\";\nimport Search from \"./Search\";\nimport \"./styles.css\"\n\n\n\n  class Home extends React.Component{\n      constructor(props){\n          super(props)\n          this.state = {\n              queryCity: \"\",\n              queryState:\"\",\n              queryKeyword: \"\",\n              submitted: false,\n              loggedIn: false\n          }\n      }\n\n      onSubmit = (event) => {\n          this.setState({submitted: true})\n          event.preventDefault();\n      }\n\n      searchByCity = (event) => {\n          let query = event.target.value\n          this.setState({queryCity: query});\n      }\n\n      searchByState = (event) => {\n          let query = event.target.value;\n          this.setState({queryState: query});\n      }\n\n      searchByKeyword = (event) => {\n          let query = event.target.value;\n          this.setState({queryKeyword: query});\n      }\n   \n\n    render(){\n        let user = '';\n        const location = this.props.location\n        if(location){\n            if (location.state){\n                if (location.state.user){\n                    user = location.state.user;\n                }\n            }\n        }\n        if (this.state.submitted){\n            const results = [this.state.queryCity,this.state.queryState,this.state.queryKeyword];\n            let to = {pathname:'/results', state: {result: results}};\n            return (\n                <Redirect to={to}/>\n            );\n        }\n        const visible = locations.filter(x => x.visible === true)\n        return(\n            <div class = \"home\">\n                  {user.length > 0 ? \n                    <div className='userHeader'>\n                        Hello, <b>{user}!</b><br/>\n                        <div class = \"loggedButtons\">\n                        <Link to='/addbusiness' class=\"loggedLink\">Add A Business</Link><br/>\n                        <Link to='/delete' class=\"loggedLink\">Delete Business</Link>\n                        </div>\n                     </div>\n                    : \n                    <div class =\"userHeader\">\n                        <Link to='/login'>Login</Link>\n                        </div>}\n                        <div class = \"searchDiv\">\n                            <Search />\n                        </div>\n                        <div class = \"visibleLocationsFooter\">\n                            All Nerby Locations!\n                            {visible.map(x => \n                                (<div>\n                                    <b>{x.name} : {x.type}</b>\n                                </div>))}\n                        </div>\n            </div>\n        );\n  }\n}\nexport default Home;\n","import React from 'react';\nimport {\n    Redirect\n} from 'react-router-dom';\n//import './Login.css';\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            signedIn: false\n        };\n    }\n    login = () => {\n        this.setState({\n            showLoginForm: true\n        });\n    } \n    onSubmit = (event) => {\n        if (this.state.username.trim().length > 0){\n            this.setState({signedIn: true});\n    }\n        event.preventDefault();\n    }\n\n    handleChangeName = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]:value});\n    }\n    handleChangePassword = (event) => {\n        const value = event.target.value;\n        const password = event.target.name;\n        this.setState({[password]:value});\n    }\n\n    render(){\n        let from = {pathname: '/mynearbyplaces/', state: {user: this.state.username}};\n        if(this.state.signedIn){\n            return (\n                <Redirect to={from}/>\n            );\n        }\n        return (\n            <div className='updateContainer'>\n            <div className='loginText'>\n                Enter Username and Password\n            <form onSubmit={this.onSubmit}>\n                <input \n                type= \"text\" \n                value={this.state.username}\n                name='username'\n                placeholder='Username'\n                onChange={this.handleChangeName}\n                ></input><br/>\n                <input \n                type=\"text\" \n                name=\"password\"\n                placeholder='Password'\n                value={this.state.password}\n                onChange={this.handleChangePassword}\n                ></input><br></br>\n                <button className = 'submitButton' type=\"submit\">Login</button>\n            </form>\n            </div>\n        </div>\n        );\n    }\n}\nexport default Login;","import React from 'react';\nimport {\n    Redirect\n} from 'react-router-dom';\nimport locations from \"./Locations\";\n\nclass Results extends React.Component{\n    constructor(props){\n        super(props);\n        console.log(props);\n        this.state = {city: props.location.state.result[0],\n            state: props.location.state.result[1],\n            keyword: props.location.state.result[2],\n            filtered: []\n    }\n}\n    getAll() {\n        const city = this.state.city.toUpperCase().trim()\n        const state = this.state.state.toUpperCase().trim()\n        const keyword = this.state.keyword.toUpperCase().trim()\n        console.log(city,state,keyword);\n        let retSet = [];\n        for (var i = 0; i < locations.length; i++){\n            if (locations[i].city.toUpperCase().trim() === city){\n                if (locations[i].state.toUpperCase().trim() === state){\n                    let keys = locations[i].keywords.split(\",\");\n                    console.log(keys);\n                    for (var x = 0; x < keys.length; x++){\n                        if (keys[x].toUpperCase().trim() === keyword){\n                            retSet.push(locations[i])\n                        }\n                    }\n                }\n            }\n        }\n        return retSet;\n    }\n\n    getByKeyword = () => {\n        const keyword = this.state.keyword.toUpperCase().trim()\n        let retSet = [];\n        for (var x = 0; x < locations.length; x++){\n            if (locations[x].keyword.toUpperCase().trim() === keyword){\n                retSet.push(locations[x])\n                        }\n                    }\n        return retSet;\n    }\n\n    getAllNoLocation = () => {\n        const temp = \"hello\";\n    }\n    getResults(){\n        const city = this.state.city\n        const state = this.state.state\n        const keyword = this.state.keyword\n        if (keyword.length > 0 && city.length > 0 && state.length > 0){\n            let filtered = this.getAll();\n            return filtered;\n        }\n        if (keyword.length > 0 && city.length == 0){\n            let filtered = this.getByKeyword();\n        }\n        if (keyword.length == 0 && city.length == 0 && state.length == 0){\n           let filtered =  this.getAllNoLocation();\n        }\n\n    }\n    componentDidMount() {\n        console.log(\"In mount\")\n        const entries = this.getResults();\n        this.setState({filtered: entries})\n    }\n\n    body = () => {\n        const results = this.state.filtered;\n        return (\n            <div>\n            {results.map((entry) => \n            (<div>\n            <h3>{entry.name}</h3><br/>\n            {entry.city}<br/>\n            Rating: {entry.rating}<br/>\n            Reviews: {entry.reviews.map((review) =>\n            (<li key={entry.reviews}>{review}</li>))}\n            {entry.address}<br/>\n            Opens: {entry.open}<br/>\n            Close: {entry.close}\n            </div>))}\n            </div>\n        );\n    }\n    render(){\n        return(\n        <div>{this.body()}</div>\n        );\n    }\n}\nexport default Results;","import React from 'react';\nimport {\n    Redirect\n} from 'react-router-dom';\nimport locations from \"./Locations\";\nimport server from \"./Server\";\nimport \"./styles.css\";\n\n\nclass Update extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            updated: false,\n            newName: \"\",\n        }\n    }\n\n    onSubmit = (e) => {\n        this.setState({updated: true})\n        const id = this.props.location.state.id\n        const state = this.state;\n        const biz = locations[id];\n        const updateBiz = {\n            id: id, name: state.newName, address: biz.address, type: biz.type, city: biz.city,\n            state: biz.state, keywords: biz.keywords, reviews: biz.reviews, rating: biz.rating,\n            open: biz.open, close: biz.close\n        }\n        server.updateBusiness(updateBiz);\n        e.preventDefault();\n\n    }\n\n    setNewName = (e) => {\n        let val = e.target.value;\n        this.setState({newName: val});\n    }\n\n    render(){\n        if (this.state.updated){\n            const id = this.props.location.state.id\n            console.log(locations[id])\n            const biz = locations[id]\n            return (\n                <Redirect to=\"mynearbyplaces\" />\n            );\n        }\n        else{\n            const biz = locations;\n            const curr = 0;\n            return (\n                <div class = \"updateContainer\">\n                    <div class = \"updateBar\">\n                    <form onSubmit={this.onSubmit}>\n                        <input type=\"text\"\n                            value = {this.state.newName}\n                            placeholder = \"update name of business\"\n                            onChange={this.setNewName}></input>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                    </div>\n                </div>\n            );\n\n    }\n\n    }\n}\nexport default Update;","import React from 'react';\nimport {\n    Redirect\n} from 'react-router-dom';\nimport locations from \"./Locations\";\nimport server from \"./Server\";\n\n\nclass AddReview extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            updated: false,\n            newReview: \"\",\n        }\n    }\n\n    onSubmit = (e) => {\n        this.setState({updated: true})\n        const id = this.props.location.state.id\n        server.addAReview(id,this.state.newReview);\n        e.preventDefault();\n    }\n\n    setNewReview = (e) => {\n        let val = e.target.value;\n        this.setState({newReview: val});\n    }\n\n    render(){\n        if (this.state.updated){\n            const id = this.props.location.state.id\n            console.log(locations[id])\n            const biz = locations[id]\n            return (\n                <Redirect to=\"mynearbyplaces\" />\n            );\n        }\n        else{\n            return (\n                <div class = \"updateContainer\">\n                    <div class = \"updateBar\">\n                    <form onSubmit={this.onSubmit}>\n                        <input type=\"text\"\n                            value = {this.state.newreview}\n                            placeholder = \"update name of business\"\n                            onChange={this.setNewReview}></input>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                    </div>\n                </div>\n            );\n\n    }\n\n    }\n}\nexport default AddReview;","import React from 'react';\nimport {\n    Redirect\n} from 'react-router-dom';\nimport locations from \"./Locations\";\nimport server from \"./Server\";\n\n\nclass AddReview extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            updated: false,\n            newName: \"\",\n            newAddress: \"\",\n            newType: \"\",\n            newCity: \"\",\n            newState: \"\",\n            newKeywords: \"\",\n            newOpen: \"\",\n            newClose: \"\"\n        }\n    }\n\n    onSubmit = (e) => {\n        this.setState({updated: true})\n        console.log(this.state.newName)\n        const x = this.state;\n        const businessObj = {\n            id: 0, visible: true, name: x.newName,address: x.newAddress, type: x.newType,\n            city: x.newCity, state: x.newState, keywords: x.newKeywords,\n            open: x.newOpen, close: x.newClose\n        }\n        server.addBusiness(businessObj);\n        e.preventDefault();\n    }\n\n    setNewEntry = (e) => {\n        let val = e.target.value;\n        let name = e.target.name;\n        this.setState({[name]: val});\n    }\n\n    render(){\n        if (this.state.updated){\n            return (\n                <Redirect to=\"/mynearbyplaces\" />\n            );\n        }\n        else{\n            return (\n                <div class = \"businessContainer\">\n                    <form onSubmit={this.onSubmit}>\n                        <input type=\"text\"\n                            value = {this.state.newName}\n                            name = \"newName\"\n                            placeholder = \"enter new name of business\"\n                            onChange={this.setNewEntry}></input><br/>\n\n                            <input type=\"text\"\n                            value = {this.state.newAddress}\n                            name = \"newAddress\"\n                            placeholder = \"enter new address\"\n                            onChange={this.setNewEntry}></input>\n\n                            <input type=\"text\"\n                            value = {this.state.newType}\n                            name = \"newType\"\n                            placeholder = \"Type: Restaurant, Services, or Retail\"\n                            onChange={this.setNewEntry}></input>\n\n                            <input type=\"text\"\n                            value = {this.state.newCity}\n                            name = \"newCity\"\n                            placeholder = \"City\"\n                            onChange={this.setNewEntry}></input>\n\n                            <input type=\"text\"\n                            value = {this.state.newState}\n                            name = \"newState\"\n                            placeholder = \"State\"\n                            onChange={this.setNewEntry}></input>\n\n                            <input type=\"text\"\n                            value = {this.state.newKeywords}\n                            name = \"newKeywords\"\n                            placeholder = \"Some keywords, seperated by ',' NO SPACES\"\n                            onChange={this.setNewEntry}></input>\n\n                            <input type=\"text\"\n                            value = {this.state.newOpen}\n                            name = \"newOpen\"\n                            placeholder = \"Time Open (No ':')\"\n                            onChange={this.setNewEntry}></input>\n\n                            <input type=\"text\"\n                            value = {this.state.newClose}\n                            name = \"newClose\"\n                            placeholder = \"Time Close (No ':')\"\n                            onChange={this.setNewEntry}></input><br/>\n\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n            );\n\n    }\n\n    }\n}\nexport default AddReview;","import React from 'react';\nimport {\n    Redirect\n} from 'react-router-dom';\nimport locations from \"./Locations\";\nimport server from \"./Server\";\n\n\nclass Update extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            updated: false,\n            deleteThis: \"\",\n        }\n    }\n\n    onSubmit = (e) => {\n        this.setState({updated: true})\n        server.deleteBusiness(this.state.deleteThis);\n        e.preventDefault();\n\n    }\n\n    setDeleteThis = (e) => {\n        let val = e.target.value;\n        this.setState({deleteThis: val});\n    }\n\n    render(){\n        if (this.state.updated){\n            return (\n                <Redirect to=\"mynearbyplaces\" />\n            );\n        }\n        else{\n            const visible = locations.filter(x => x.visible === true)\n            return (\n                <div>\n                    <form onSubmit={this.onSubmit}>\n                        <input type=\"text\"\n                            value = {this.state.deleteThis}\n                            placeholder = \"choose an ID from below\"\n                            onChange={this.setDeleteThis}></input>\n                        <button type=\"submit\">Delete</button>\n                    </form>\n                    Select from these ID's to delete an entry.\n                    {visible.map(x => \n                                (<div>\n                                    <b>{x.name} ID: {x.id}</b>\n                                </div>))}\n                </div>\n            );\n\n    }\n\n    }\n}\nexport default Update;","import React from 'react';\nimport Home from './Components/Home';\nimport Login from './Components/Login';\nimport Results from './Components/Results';\nimport Update from './Components/Update';\nimport AddReview from './Components/AddReview';\nimport AddBusiness from './Components/AddBusiness';\nimport Delete from './Components/Delete'\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\n \n\nclass App extends React.Component{\n  render(){\n  return (\n    <BrowserRouter basename={process.env.Public_URL}>\n      <Switch>\n        <Route exact path = '/mynearbyplaces' render={props => <Home {...props} />}/>\n        <Route path = \"/login\">\n          <Login />\n        </Route>\n        <Route path = '/results' render={props => <Results {...props}/>} />\n        <Route path = '/update' render={props => <Update {...props}/>} />\n        <Route path = '/addreview' render={props => <AddReview {...props}/>} />\n        <Route path = '/addbusiness' render={props => <AddBusiness {...props}/>} />\n        <Route path = '/delete' render={props => <Delete {...props}/>} />\n      </Switch>\n    </BrowserRouter>\n\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}