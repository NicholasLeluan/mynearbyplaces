{"version":3,"sources":["Components/Locations.js","Components/Server.js","ServerInterface/server.js","Components/Search.js","Components/Home.js","Components/Login.js","Components/Results.js","Components/Update.js","Components/AddReview.js","Components/AddBusiness.js","Components/Delete.js","Components/Details.js","App.js","reportWebVitals.js","index.js"],"names":["locations","id","name","visible","address","type","city","state","keywords","reviews","rating","open","close","server","fetchRestaurant","result","filter","biz","length","getEntries","fetchAll","getResults","keyword","x","toUpperCase","includes","toLowerCase","getAllSearchResults","getCitySearchResults","getTypeSearchResults","getKeywordSearchResults","updateBusiness","changedBiz","addAReview","review","push","addBusiness","business","newID","console","log","deleteBusiness","api","getAllLocations","fetch","then","json","searchTermLoc","searchType","loc","term","addReview","toString","method","headers","body","JSON","stringify","getDetails","openX","closeX","Search","props","onSubmit","e","setState","searched","searchKeyword","searchCity","results","catch","preventDefault","setType","val","target","value","setCity","setKeyword","goBack","this","onClick","map","entry","class","to","pathname","onChange","disabled","selected","hidden","placeholder","React","Component","Home","event","submitted","searchByCity","query","queryCity","searchByState","queryState","searchByKeyword","queryKeyword","loggedIn","user","location","className","Login","login","showLoginForm","username","trim","signedIn","handleChangeName","handleChangePassword","password","from","Results","getByKeyword","retSet","getAllNoLocation","filtered","i","keys","split","getAll","entries","Update","updated","updateBiz","newName","setNewName","AddReview","newReview","setNewReview","newreview","newType","newAddress","newCity","newState","newOpen","newClose","newKeywords","setNewEntry","deleteThis","setDeleteThis","Details","attempt","details","place","App","basename","process","Public_URL","exact","path","render","AddBusiness","Delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a1ac7fa.chunk.js","sourcesContent":["let locations = [\n    {\n        id: 0,\n        name: \"Target\",\n        visible: true,\n        address: \"4040 N Oracle\",\n        type: 'Retail',\n        city: \"Tucson\",\n        state: \"AZ\",\n        keywords: \"retail,clothing,grocery\",\n        reviews: [\"here is a review for target\", \"here is another for target\"],\n        rating: 5,\n        open: 900,\n        close: 2200\n    },\n    {\n        id: 1,\n        visible: true,\n        name: \"TJ Maxx\",\n        address: \"6230 N Oracle Rd\",\n        type: 'Retail',\n        city: \"Tucson\",\n        state: \"AZ\",\n        keywords: \"clothing,retial,mens,womens,children,test\",\n        reviews: [\"here is a review for TJ Maxx\", \"here is another for TJ Maxx\"],\n        rating: 5,\n        open: 800,\n        close: 2000,\n    },\n    {\n        id: 2,\n        visible: true,\n        name: \"Nico's Taco Shop\",\n        address: \"2965 N Campbell Ave\",\n        type: \"Restaurant\",\n        city: \"Tucson\",\n        state: \"AZ\",\n        keywords: \"food,restaurant,mexican,burrito,test\",\n        reviews: [\"here is a review for Nicos\", \"here is another for Nicos\"],\n        rating: 5,\n        open: 2400,\n        close: 2400\n\n    },\n    {\n        id: 3,\n        visible: true,\n        name: \"Green Things\",\n        address: \"3384 E River Rd\",\n        type: 'Retail',\n        city: \"Tucson\",\n        state: \"AZ\",\n        keywords: \"garden,plants,nursery,pots\",\n        reviews: [\"here is a review for Green Things\", \"here is another for Green Things\"],\n        rating: 5,\n        open: 900,\n        close: 1700\n\n    },\n    {\n        id: 4,\n        visible: true,\n        name: \"Plumb Happy Plumbing\",\n        address: \"123 Happy Lane\",\n        type: 'Services',\n        city: \"Tucson\",\n        state: \"AZ\",\n        keywords: \"plumbing,pottery,test\",\n        reviews: [\"here is a review for PHP\", \"here is another for PHP\"],\n        rating: 5,\n        open: 900,\n        close: 1700\n\n    }\n\n]\n\nexport default locations;","import locations from \"./Locations\";\nimport Search from \"./Search\";\n\n\nlet getEntries = function(type){\n    let result = locations.filter(biz => biz.type === type);\n    if (result.length > 0){\n        return result.locations;\n    }else{\n        return [];\n    }\n}\n\nlet getAllSearchResults = function(type,city,keyword){\n    let businesses = locations.filter(x => x.type.toUpperCase() === type.toUpperCase()\n        && x.city.toUpperCase() === city.toUpperCase()\n        && x.keywords.includes(keyword.toLowerCase())\n        && x.visible === true)\n    if (businesses){\n        return businesses;\n    }else{\n        return [];\n    }\n}\nlet getCitySearchResults = function(city){\n    let businesses = locations.filter(x => x.city.toUpperCase() === city.toUpperCase()\n        && x.visible === true)\n    if (businesses){\n        return businesses;\n    }else{\n        return [];\n    }\n}\n\nlet getTypeSearchResults = function(type){\n    let businesses = locations.filter(x => x.type.toUpperCase() === type.toUpperCase()\n        && x.visible === true)\n    if (businesses){\n        return businesses;\n    }else{\n        return [];\n    }\n}\n\nlet getKeywordSearchResults = function(keyword){\n    let businesses = locations.filter(x => x.keywords.includes(keyword.toLowerCase())\n        && x.visible === true)\n    if (businesses){\n        return businesses;\n    }else{\n        return [];\n    }\n}\nlet server = {\n    fetchRestaurant : () => {\n        return getEntries('Restaurant');\n    },\n    fetchAll : () => {\n        return locations;\n    },\n    getResults : (type,city,keyword) => {\n        if (type.length > 0 && city.length > 0 && keyword.length > 0){\n            return getAllSearchResults(type,city,keyword);\n        }\n        else if (type.length <= 0 && city.length > 0 && keyword.length <= 0){\n            return getCitySearchResults(city);\n        }\n        else if (type.length > 0 && city.length <= 0 && keyword.length <= 0){\n            return getTypeSearchResults(type);\n        }\n        else if (type.length <= 0 && city.length <= 0 && keyword.length > 0){\n            return getKeywordSearchResults(keyword);\n        }else{\n            return [];\n        }\n    },\n    updateBusiness:(changedBiz) => {\n        locations[changedBiz.id] = changedBiz;\n    },\n    addAReview:(id,review) => {\n        locations[id].reviews.push(review);\n    },\n    addBusiness: (business) => {\n        const newID = locations.length;\n        business.reviews = [];\n        business.rating = 0;\n        business.id = newID;\n        locations.push(business);\n        console.log(locations);\n    },\n    deleteBusiness: (id) => {\n        locations[id].visible = false;\n        console.log(locations);\n    }\n\n}\nexport default server;","let api = \"https://nicholasleluan-nearbyplaces.herokuapp.com\"\nlet server = {\n    getAllLocations: () => {return (fetch(api+\"/places\").then(x => x.json()))},\n    /*\n    Search for a busines; this will handle any case of user input; blank or not\n    */\n    searchTermLoc : (searchType,loc,term) => {\n        if (searchType.length == 0){\n            searchType = \"void_type\";\n        }\n        if (loc.length == 0){\n            loc = \"void_loc\";\n        }\n        if (term.length == 0){\n            term = \"void_term\";\n        }\n        return (fetch(api+`/search/${term}/${loc}/${searchType}`).then(x => x.json()))},\n    //addReview is not working; need to get the business displayed correctly\n    addReview : (id,review) => {return (\n        fetch(api+`/review/${id.toString()}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type' : 'application/json'\n            },\n            body: JSON.stringify({id: id, review: review})\n        })\n        )},\n    getDetails : (id) => {return (\n        fetch(api+`/detail/${id}`).then(x => x.json())\n    )},\n    \n    addBusiness : (name,type,address,city,state,rating,openX,closeX,keywords) => {return (\n        fetch(api+\"/place\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\" : \"application/json\"\n            },\n            body: JSON.stringify({\n                name: name,\n                type: type,\n                address: address,\n                city: city,\n                state: state,\n                rating: rating,\n                open: openX,\n                close: closeX,\n                keywords: keywords\n            })\n        })\n    )},\n    \n}\n\nexport default server;\n","import React from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Link,\n    Redirect\n  } from \"react-router-dom\";\n  import serverOLD from \"./Server\";\n  import locations from \"./Locations\";\n  import server from \"../ServerInterface/server\";\n\n  class Search extends React.Component{\n      constructor(props){\n          super(props)\n          this.state = {\n              searchType: \"\",\n              searchCity: \"\",\n              searchKeyword: \"\",\n              searched: false,\n              results: [],\n          }\n      }\n      onSubmit = (e) => {\n          this.setState({searched: true})\n          console.log(this.state.searchKeyword,this.state.searchType,this.state.searchKeyword);\n        server.searchTermLoc(this.state.searchType,\n          this.state.searchCity,\n          this.state.searchKeyword).then(x => this.setState({results: x})).catch(e => console.log(e));\n          e.preventDefault();\n      }\n\n      setType = (e) => {\n          let val = e.target.value;\n          this.setState({searchType: val});\n      }\n\n      setCity = (e) => {\n          let val = e.target.value;\n          this.setState({searchCity: val});\n      }\n\n      setKeyword = (e) => {\n          let val = e.target.value;\n          this.setState({searchKeyword: val});\n      }\n\n      goBack = (e) => {\n          this.setState({searched: false})\n      }\n\n      render(){\n          if (this.state.searched){\n              if (this.state.results.length > 0){  \n                  console.log(this.state.results);\n              return (\n                <div>\n                <div>Your Search found <b>{this.state.results.length}</b> Result(s):</div>\n                <div><button onClick = {this.goBack}>Edit Search</button></div>\n                {this.state.results.map(entry =>\n                (<div class=\"displaySearch\">\n                <b>{entry.name}</b><br/>\n                {entry.city}, {entry.state}: {entry.address}<br/>\n                Opens: {entry.open}<br/>\n                Close: {entry.close}<br/>\n                <Link \n                to={{\n                    pathname: '/placeDetails',\n                    state: {id: entry.id, name: entry.name}\n                    }}>Read what people have to say about {entry.name}!</Link><br/>\n                <Link \n                to={{\n                    pathname: '/addreview',\n                    state: {id: entry.id}\n                }}>Add A Review</Link><hr/>\n                </div>))}\n                </div>\n            );\n              }else{\n                  return(\n                      <div>\n                    <div><button onClick = {this.goBack}>Edit Search</button></div>\n                      <h1>No results</h1>\n                      </div>\n                  );\n              }\n          }else{\n          return(\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <select id = \"dropdown\" name=\"type\" value={this.state.searchType} onChange = {this.setType}>\n                        <option value = '' disabled selected hidden>Choose a Type</option>\n                        <option value = \"Restaurant\">Restaurant</option>\n                        <option value = \"Retail\">Retail</option>\n                        <option value = \"Services\">Services</option>\n                    </select><br/>\n                    <input type=\"text\" \n                            value = {this.state.searchCity}\n                            placeholder=\"Search City\"\n                            onChange={this.setCity}></input><br/>\n                    <input type=\"text\"\n                            value = {this.state.searchKeyword}\n                            placeholder = \"Search by Keyword\"\n                            onChange = {this.setKeyword}></input><br/>\n                    <button type = \"submit\">Search</button>\n                </form>\n\n            </div>\n          );\n          }\n      }\n  }\n  export default Search;","import React from 'react';\nimport {\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport locations from \"./Locations\";\nimport Search from \"./Search\";\nimport \"./styles.css\";\nimport server from '../ServerInterface/server';\n\n\n\n  class Home extends React.Component{\n      constructor(props){\n          super(props)\n          this.state = {\n              queryCity: \"\",\n              queryState:\"\",\n              queryKeyword: \"\",\n              submitted: false,\n              loggedIn: false,\n              visible: [],\n          }\n      }\n\n      componentDidMount() {\n          server.getAllLocations().then(x => this.setState({visible: x})).catch(e => console.log(e));\n          console.log(\"in home, visible:\"+this.state.visible);\n      }\n\n      onSubmit = (event) => {\n          this.setState({submitted: true})\n          event.preventDefault();\n      }\n\n      searchByCity = (event) => {\n          let query = event.target.value\n          this.setState({queryCity: query});\n      }\n\n      searchByState = (event) => {\n          let query = event.target.value;\n          this.setState({queryState: query});\n      }\n\n      searchByKeyword = (event) => {\n          let query = event.target.value;\n          this.setState({queryKeyword: query});\n      }\n   \n\n    render(){\n        let user = '';\n        const location = this.props.location\n        if(location){\n            if (location.state){\n                if (location.state.user){\n                    user = location.state.user;\n                }\n            }\n        }\n        if (this.state.submitted){\n            const results = [this.state.queryCity,this.state.queryState,this.state.queryKeyword];\n            let to = {pathname:'/results', state: {result: results}};\n            return (\n                <Redirect to={to}/>\n            );\n        }\n\n        if (this.state.visible.length == 0 ){\n            return(<div>\n                data is loading...\n            </div>)\n        }else{\n        console.log(this.state.visible);\n        return(\n            <div class = \"home\">\n                  {user.length > 0 ? \n                    <div className='userHeader'>\n                        Hello, <b>{user}!</b><br/>\n                        <div class = \"loggedButtons\">\n                        <Link to='/addbusiness' class=\"loggedLink\">Add A Business</Link><br/>\n                        </div>\n                     </div>\n                    : \n                    <div class =\"userHeader\">\n                        To add a business, login! <br/>\n                        <Link to='/login'>Login</Link>\n                        </div>}\n                        <div class = \"searchDiv\">\n                            <Search />\n                        </div>\n                        <div class = \"visibleLocationsFooter\">\n                            All Nerby Locations!\n                            {this.state.visible.map(x => \n                                (<div>\n                                    <b>{x.name} : {x.type}</b>\n                                </div>))}\n                        </div>\n            </div>\n        );\n  }\n}\n}\nexport default Home;\n","import React from 'react';\nimport {\n    Redirect\n} from 'react-router-dom';\n//import './Login.css';\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            signedIn: false\n        };\n    }\n    login = () => {\n        this.setState({\n            showLoginForm: true\n        });\n    } \n    onSubmit = (event) => {\n        if (this.state.username.trim().length > 0){\n            this.setState({signedIn: true});\n    }\n        event.preventDefault();\n    }\n\n    handleChangeName = (event) => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]:value});\n    }\n    handleChangePassword = (event) => {\n        const value = event.target.value;\n        const password = event.target.name;\n        this.setState({[password]:value});\n    }\n\n    render(){\n        let from = {pathname: '/mynearbyplaces/', state: {user: this.state.username}};\n        if(this.state.signedIn){\n            return (\n                <Redirect to={from}/>\n            );\n        }\n        return (\n            <div className='updateContainer'>\n            <div className='loginText'>\n                Enter Username and Password\n            <form onSubmit={this.onSubmit}>\n                <input \n                type= \"text\" \n                value={this.state.username}\n                name='username'\n                placeholder='Username'\n                onChange={this.handleChangeName}\n                ></input><br/>\n                <input \n                type=\"text\" \n                name=\"password\"\n                placeholder='Password'\n                value={this.state.password}\n                onChange={this.handleChangePassword}\n                ></input><br></br>\n                <button className = 'submitButton' type=\"submit\">Login</button>\n            </form>\n            </div>\n        </div>\n        );\n    }\n}\nexport default Login;","import React from 'react';\nimport {\n    Redirect\n} from 'react-router-dom';\nimport locations from \"./Locations\";\n\nclass Results extends React.Component{\n    constructor(props){\n        super(props);\n        console.log(props);\n        this.state = {city: props.location.state.result[0],\n            state: props.location.state.result[1],\n            keyword: props.location.state.result[2],\n            filtered: []\n    }\n}\n    getAll() {\n        const city = this.state.city.toUpperCase().trim()\n        const state = this.state.state.toUpperCase().trim()\n        const keyword = this.state.keyword.toUpperCase().trim()\n        console.log(city,state,keyword);\n        let retSet = [];\n        for (var i = 0; i < locations.length; i++){\n            if (locations[i].city.toUpperCase().trim() === city){\n                if (locations[i].state.toUpperCase().trim() === state){\n                    let keys = locations[i].keywords.split(\",\");\n                    console.log(keys);\n                    for (var x = 0; x < keys.length; x++){\n                        if (keys[x].toUpperCase().trim() === keyword){\n                            retSet.push(locations[i])\n                        }\n                    }\n                }\n            }\n        }\n        return retSet;\n    }\n\n    getByKeyword = () => {\n        const keyword = this.state.keyword.toUpperCase().trim()\n        let retSet = [];\n        for (var x = 0; x < locations.length; x++){\n            if (locations[x].keyword.toUpperCase().trim() === keyword){\n                retSet.push(locations[x])\n                        }\n                    }\n        return retSet;\n    }\n\n    getAllNoLocation = () => {\n        const temp = \"hello\";\n    }\n    getResults(){\n        const city = this.state.city\n        const state = this.state.state\n        const keyword = this.state.keyword\n        if (keyword.length > 0 && city.length > 0 && state.length > 0){\n            let filtered = this.getAll();\n            return filtered;\n        }\n        if (keyword.length > 0 && city.length == 0){\n            let filtered = this.getByKeyword();\n        }\n        if (keyword.length == 0 && city.length == 0 && state.length == 0){\n           let filtered =  this.getAllNoLocation();\n        }\n\n    }\n    componentDidMount() {\n        console.log(\"In mount\")\n        const entries = this.getResults();\n        this.setState({filtered: entries})\n    }\n\n    body = () => {\n        const results = this.state.filtered;\n        return (\n            <div>\n            {results.map((entry) => \n            (<div>\n            <h3>{entry.name}</h3><br/>\n            {entry.city}<br/>\n            Rating: {entry.rating}<br/>\n            Reviews: {entry.reviews.map((review) =>\n            (<li key={entry.reviews}>{review}</li>))}\n            {entry.address}<br/>\n            Opens: {entry.open}<br/>\n            Close: {entry.close}\n            </div>))}\n            </div>\n        );\n    }\n    render(){\n        return(\n        <div>{this.body()}</div>\n        );\n    }\n}\nexport default Results;","import React from 'react';\nimport {\n    Redirect\n} from 'react-router-dom';\nimport locations from \"./Locations\";\nimport server from \"./Server\";\nimport \"./styles.css\";\n\n\nclass Update extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            updated: false,\n            newName: \"\",\n        }\n    }\n\n    onSubmit = (e) => {\n        this.setState({updated: true})\n        const id = this.props.location.state.id\n        const state = this.state;\n        const biz = locations[id];\n        const updateBiz = {\n            id: id, name: state.newName, address: biz.address, type: biz.type, city: biz.city,\n            state: biz.state, keywords: biz.keywords, reviews: biz.reviews, rating: biz.rating,\n            open: biz.open, close: biz.close\n        }\n        server.updateBusiness(updateBiz);\n        e.preventDefault();\n\n    }\n\n    setNewName = (e) => {\n        let val = e.target.value;\n        this.setState({newName: val});\n    }\n\n    render(){\n        if (this.state.updated){\n            const id = this.props.location.state.id\n            console.log(locations[id])\n            const biz = locations[id]\n            return (\n                <Redirect to=\"mynearbyplaces\" />\n            );\n        }\n        else{\n            const biz = locations;\n            const curr = 0;\n            return (\n                <div class = \"updateContainer\">\n                    <div class = \"updateBar\">\n                    <form onSubmit={this.onSubmit}>\n                        <input type=\"text\"\n                            value = {this.state.newName}\n                            placeholder = \"update name of business\"\n                            onChange={this.setNewName}></input>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                    </div>\n                </div>\n            );\n\n    }\n\n    }\n}\nexport default Update;","import React from 'react';\nimport {\n    Link,\n    Redirect\n} from 'react-router-dom';\nimport locations from \"./Locations\";\nimport serverOLD from \"./Server\";\nimport server from '../ServerInterface/server';\n\n\nclass AddReview extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            updated: false,\n            newReview: \"\",\n        }\n    }\n\n    onSubmit = (e) => {\n        this.setState({updated: true})\n        //use this ID to add a new review to the reviews table in SQL\n        const id = this.props.location.state.id\n        console.log(id,this.state.newReview);\n        //serverOLD.addAReview(id,this.state.newReview);\n        server.addReview(id,this.state.newReview);\n        e.preventDefault();\n    }\n\n    setNewReview = (e) => {\n        let val = e.target.value;\n        this.setState({newReview: val});\n    }\n\n    render(){\n        if (this.state.updated){\n            const id = this.props.location.state.id\n            console.log(locations[id])\n            const biz = locations[id]\n            return (\n                <div class = 'thankReview'>Thank you for review! <br/>\n                <Link \n                to={{\n                    pathname: '/mynearbyplaces'\n                    }}>Click here to go Home</Link>\n                </div>\n            );\n        }\n        else{\n            return (\n                <div class = \"updateContainer\">\n                    <div class = \"updateBar\">\n                    <form onSubmit={this.onSubmit}>\n                        <input type=\"text\"\n                            value = {this.state.newreview}\n                            placeholder = \"Add a review!\"\n                            onChange={this.setNewReview}></input>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                    </div>\n                </div>\n            );\n\n    }\n\n    }\n}\nexport default AddReview;","import React from 'react';\nimport {\n    Redirect\n} from 'react-router-dom';\nimport locations from \"./Locations\";\nimport serverOLD from \"./Server\";\nimport server from '../ServerInterface/server';\n\n\nclass AddReview extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            updated: false,\n            newName: \"\",\n            newAddress: \"\",\n            newType: \"\",\n            newCity: \"\",\n            newState: \"\",\n            newKeywords: \"\",\n            newOpen: \"\",\n            newClose: \"\"\n        }\n    }\n\n    onSubmit = (e) => {\n        this.setState({updated: true})\n        console.log(this.state.newName)\n        const x = this.state;\n        //Order: name,type,address,city,state,rating,openX,closeX,keywords\n        server.addBusiness(x.newName,x.newType,x.newAddress,x.newCity,x.newState,5,x.newOpen,x.newClose,x.newKeywords);\n        e.preventDefault();\n    }\n\n    setNewEntry = (e) => {\n        let val = e.target.value;\n        let name = e.target.name;\n        this.setState({[name]: val});\n    }\n\n    render(){\n        if (this.state.updated){\n            return (\n                <Redirect to=\"/mynearbyplaces\" />\n            );\n        }\n        else{\n            return (\n                <div class = \"businessContainer\">\n                    <form onSubmit={this.onSubmit}>\n                        <input type=\"text\"\n                            value = {this.state.newName}\n                            name = \"newName\"\n                            placeholder = \"enter new name of business\"\n                            onChange={this.setNewEntry}></input><br/>\n\n                            <input type=\"text\"\n                            value = {this.state.newAddress}\n                            name = \"newAddress\"\n                            placeholder = \"enter new address\"\n                            onChange={this.setNewEntry}></input>\n\n                            <input type=\"text\"\n                            value = {this.state.newType}\n                            name = \"newType\"\n                            placeholder = \"Type: Restaurant, Services, or Retail\"\n                            onChange={this.setNewEntry}></input>\n\n                            <input type=\"text\"\n                            value = {this.state.newCity}\n                            name = \"newCity\"\n                            placeholder = \"City\"\n                            onChange={this.setNewEntry}></input>\n\n                            <input type=\"text\"\n                            value = {this.state.newState}\n                            name = \"newState\"\n                            placeholder = \"State\"\n                            onChange={this.setNewEntry}></input>\n\n                            <input type=\"text\"\n                            value = {this.state.newKeywords}\n                            name = \"newKeywords\"\n                            placeholder = \"Some keywords, seperated by ',' NO SPACES\"\n                            onChange={this.setNewEntry}></input>\n\n                            <input type=\"text\"\n                            value = {this.state.newOpen}\n                            name = \"newOpen\"\n                            placeholder = \"Time Open (No ':')\"\n                            onChange={this.setNewEntry}></input>\n\n                            <input type=\"text\"\n                            value = {this.state.newClose}\n                            name = \"newClose\"\n                            placeholder = \"Time Close (No ':')\"\n                            onChange={this.setNewEntry}></input><br/>\n\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n            );\n\n    }\n\n    }\n}\nexport default AddReview;","import React from 'react';\nimport {\n    Redirect\n} from 'react-router-dom';\nimport locations from \"./Locations\";\nimport server from \"./Server\";\n\n\nclass Update extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            updated: false,\n            deleteThis: \"\",\n        }\n    }\n\n    onSubmit = (e) => {\n        this.setState({updated: true})\n        server.deleteBusiness(this.state.deleteThis);\n        e.preventDefault();\n\n    }\n\n    setDeleteThis = (e) => {\n        let val = e.target.value;\n        this.setState({deleteThis: val});\n    }\n\n    render(){\n        if (this.state.updated){\n            return (\n                <Redirect to=\"mynearbyplaces\" />\n            );\n        }\n        else{\n            const visible = locations.filter(x => x.visible === true)\n            return (\n                <div>\n                    <form onSubmit={this.onSubmit}>\n                        <input type=\"text\"\n                            value = {this.state.deleteThis}\n                            placeholder = \"choose an ID from below\"\n                            onChange={this.setDeleteThis}></input>\n                        <button type=\"submit\">Delete</button>\n                    </form>\n                    Select from these ID's to delete an entry.\n                    {visible.map(x => \n                                (<div>\n                                    <b>{x.name} ID: {x.id}</b>\n                                </div>))}\n                </div>\n            );\n\n    }\n\n    }\n}\nexport default Update;","import React from 'react';\nimport {\n    Redirect,\n    Link\n} from 'react-router-dom';\n\nimport locations from \"./Locations\";\nimport server from \"../ServerInterface/server\";\n//import \"./styles.css\";\n\n\nclass Details extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            attempt: true,\n            id: null,\n            details: [],\n            name: \"\",\n        }\n    }\n    componentDidMount(){\n        const id = this.props.location.state.id;\n        const name = this.props.location.state.name;\n        console.log(id);\n        server.getDetails(id).then(x => this.setState({details: x})).catch(e => console.log(e));\n        this.setState({attempt: true});\n        this.setState({name: name});\n        this.setState({id:id});\n        //this.setState({placeid: id});\n    }\n\n    render(){\n        if (this.state.details.length == 0 && !this.state.attempt){\n            return(\n                <div>loading results...</div>\n            )\n        }\n        else if (this.state.details.length > 0){\n            const place = this.state.details[0];\n            return(\n                <div class=\"detailContainer\">\n                    <h1>{place.name}</h1><br/>\n                    {this.state.details.map(x =>\n                    (<li>{x.review}</li>       \n                    ))}\n                    <br/>\n                    <Link \n                to={{\n                    pathname: '/addreview',\n                    state: {id: this.state.id}\n                }}>Add a review for {this.state.name}!</Link>\n                </div>\n\n            );\n        }else{\n    \n        return(\n            <div class = \"detailContainer\">There are no reviews for <b>{this.state.name}</b> be the first to review!<br/>\n            <Link \n                to={{\n                    pathname: '/addreview',\n                    state: {id: this.state.id}\n                }}>Add A Review</Link>\n            \n            </div>\n            \n        );\n    }\n}\n}\nexport default Details;","import React from 'react';\nimport Home from './Components/Home';\nimport Login from './Components/Login';\nimport Results from './Components/Results';\nimport Update from './Components/Update';\nimport AddReview from './Components/AddReview';\nimport AddBusiness from './Components/AddBusiness';\nimport Delete from './Components/Delete'\nimport Details from './Components/Details'\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\n \n\nclass App extends React.Component{\n  render(){\n  return (\n    <BrowserRouter basename={process.env.Public_URL}>\n      <Switch>\n        <Route exact path = '/mynearbyplaces' render={props => <Home {...props} />}/>\n        <Route path = \"/login\">\n          <Login />\n        </Route>\n        <Route path = '/results' render={props => <Results {...props}/>} />\n        <Route path = '/placeDetails' render={props => <Details {...props}/>} />\n        <Route path = '/update' render={props => <Update {...props}/>} />\n        <Route path = '/addreview' render={props => <AddReview {...props}/>} />\n        <Route path = '/addbusiness' render={props => <AddBusiness {...props}/>} />\n        <Route path = '/delete' render={props => <Delete {...props}/>} />\n      </Switch>\n    </BrowserRouter>\n\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}